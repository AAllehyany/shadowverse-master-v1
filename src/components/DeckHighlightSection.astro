---
export interface Props {
  deck: any
}
import { getDeckHighlight } from "../api";

const {deck} = Astro.props;
// const deck = await getDeckHighlight();
---

<div class="w-full">
  <h1 class="text-white truncate text-lg flex items-center font-heading">
    <span class="text-accent mr-2 w-6 h-6 relative">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-6 h-6">
        <path d="M12 15a3 3 0 100-6 3 3 0 000 6z" />
        <path fill-rule="evenodd" d="M1.323 11.447C2.811 6.976 7.028 3.75 12.001 3.75c4.97 0 9.185 3.223 10.675 7.69.12.362.12.752 0 1.113-1.487 4.471-5.705 7.697-10.677 7.697-4.97 0-9.186-3.223-10.675-7.69a1.762 1.762 0 010-1.113zM17.25 12a5.25 5.25 0 11-10.5 0 5.25 5.25 0 0110.5 0z" clip-rule="evenodd" />
      </svg>                      
    </span>
    Deck Highlight
    <span class="px-2 font-sans font-normal italic text-md text-secondary/80">({deck.archetype.archetype_name})</span>
  </h1>

  

  <div class="w-full border border-secondary rounded-t-md p-2 mt-4 grid grid-cols-3 gap-3 md:grid-cols-6">
    {deck.deckList.list.map(card => (
      <a href={`https://shadowverse-portal.com/card/${card.card_id}`} target="_blank" class="relative w-full aspect-square">
        <img src={card.imageLink} alt="" class="w-full rounded-lg absolute aspect-square object-cover">
        <div class="flex items-center justify-end w-full absolute bottom-0">
          <span class="bg-black/80 flex items-center w-8 h-8 font-bold justify-center text-white rounded-br-lg rounded-tl-lg">{card.copies}</span>
        </div>
      </a>
    ))}
  </div>

  <a href={`https://shadowverse-portal.com/deck/${deck.deckList.deckLink}`} 
    class="rounded-b-md w-full bg-secondary p-3 text-center font-bold text-sm text-primary hover:underline block">Copy Deck</a>
          
</div>